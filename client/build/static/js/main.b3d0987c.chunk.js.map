{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Signup.js","components/Login.js","components/Users.js","components/Message.js","components/Chat.js","components/Settings.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","Navbar","className","style","backgroundColor","Brand","textDecoration","fontSize","to","Nav","user","Fragment","onClick","axios","delete","clearUser","color","href","process","REACT_APP_SERVER_URL","Home","backgroundImage","padding","margin","display","justifyContent","alignItems","width","textAlign","CardDeck","Card","Img","variant","src","Body","Title","Text","Component","Signup","state","username","password","email","bio","defaultLanguage","listeLanguages","profilePic","error","upload","handleChange","event","setState","target","name","value","console","log","imageUpload","files","uploadData","FormData","append","post","then","response","data","secure_url","handleSubmit","preventDefault","setUser","history","push","catch","err","message","get","listeCountry","dictionary","fontWeight","Form","onSubmit","this","encType","Group","Label","htmlFor","Control","type","id","onChange","required","placeholder","controlId","as","Object","entries","map","country","key","Alert","Button","Login","Users","getCountyFlag","countryCode","rooms","room","onlineUsers","x","_id","includes","users","joinRoom","alt","Message","msg","class","text","translation","created_at","socket","io","Chat","messages","roomId","search","socketId","componentDidMount","resp","geoplugin_countryCode","geoplugin_city","getRooms","emit","on","isOnline","connection","city","off","searchUsers","res","getMessages","joinPrivate","user1","user2","sendMessage","userId","classNameName","Col","xs","aria-hidden","Settings","confirmPassword","completed","handleChangeClick","a","validateForm","setTimeout","length","FormGroup","bsSize","FormLabel","FormControl","pattern","border","float","position","bottom","left","block","loadingText","isLoading","isChanging","About","Header","Footer","App","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3d0987c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst NavBar = props => {\n  const handleLogout = () => {\n    axios.delete(\"/auth/logout\");\n    props.clearUser(null);\n  };\n\n  return (\n    <Navbar\n      className=\"nav justify-content-end d-flex \"\n      style={{\n        backgroundColor: \"#4056a1\"\n      }}\n    >\n      <Navbar.Brand>\n        <Link\n          className=\"text-white\"\n          style={{ textDecoration: \"none\", fontSize: \"25px\" }}\n          to=\"/\"\n        >\n          GloChat\n        </Link>\n      </Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        {props.user ? (\n          <React.Fragment>\n            <Link\n              className=\"text-white ml-4\"\n              style={{ textDecoration: \"none\", fontSize: \"20px\" }}\n              to=\"/\"\n            >\n              Chat\n            </Link>\n            <Link\n              className=\"text-white ml-4\"\n              style={{ textDecoration: \"none\", fontSize: \"20px\" }}\n              to=\"/\"\n              onClick={handleLogout}\n            >\n              Logout\n            </Link>\n            <Link\n              className=\"text-white ml-4\"\n              style={{ textDecoration: \"none\", fontSize: \"20px\" }}\n              to=\"/Settings\"\n            >\n              Settings\n            </Link>\n            <Link\n              className=\"text-white ml-4\"\n              style={{ textDecoration: \"none\", fontSize: \"20px\" }}\n              to=\"/About\"\n            >\n              About\n            </Link>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <a\n              className=\"text-white\"\n              style={{\n                textDecoration: \"none\",\n                fontSize: \"20px\",\n                color: \"white\"\n              }}\n              href={`${process.env.REACT_APP_SERVER_URL || \"\"}/auth/google`}\n            >\n              Sign in with Google\n            </a>\n\n            <Link\n              className=\"text-white ml-4\"\n              style={{ textDecoration: \"none\", fontSize: \"20px\" }}\n              to=\"/signup\"\n            >\n              Signup\n            </Link>\n            <Link\n              className=\"text-white ml-4\"\n              style={{ textDecoration: \"none\", fontSize: \"20px\" }}\n              to=\"/login\"\n            >\n              Login\n            </Link>\n          </React.Fragment>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardDeck } from \"react-bootstrap\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div style={{ backgroundImage: \"url('walls.jpg')\", padding: \"20px\" }}>\n        <div className=\"container \">\n          <Link\n            style={{\n              padding: \"20px 20px\",\n              backgroundColor: \"crimson\",\n              color: \"white\",\n              margin: \"0  auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"flex-end\",\n              width: \"20%\",\n              textDecoration: \"none\"\n            }}\n            to=\"/signup\"\n          >\n            Signup\n          </Link>\n          <Link\n            style={{\n              padding: \"20px 20px\",\n              backgroundColor: \"crimson\",\n              color: \"white\",\n              margin: \"20px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              width: \"20%\",\n              textDecoration: \"none\"\n            }}\n            to=\"/login\"\n          >\n            Login\n          </Link>\n          <h2 style={{ color: \"white\", textAlign: \"center\" }}>\n            Never Been So Easy!\n          </h2>\n          <div>\n            <CardDeck>\n              <Card>\n                <Card.Img variant=\"top\" src=\"chats.jpg\" />\n                <Card.Body>\n                  <Card.Title style={{ color: \"grey\", fontSize: \"1.5em\" }}>\n                    Live Chat\n                  </Card.Title>\n                  <Card.Text style={{ color: \"#1D2951\", fontSize: \"1.1em\" }}>\n                    Simply Login or Join the Chatroom to chat Live.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Img variant=\"top\" src=\"peoples.jpg\" />\n                <Card.Body>\n                  <Card.Title style={{ color: \"grey\", fontSize: \"1.5em\" }}>\n                    Connect to people Globally\n                  </Card.Title>\n                  <Card.Text style={{ color: \"#1D2951\", fontSize: \"1.1em\" }}>\n                    Connect to different countries and culture people all around\n                    the World!\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card>\n                <Card.Img variant=\"top\" src=\"auto.jpg\" />\n                <Card.Body>\n                  <Card.Title style={{ color: \"grey\", fontSize: \"1.5em\" }}>\n                    Auto-Translated\n                  </Card.Title>\n                  <Card.Text style={{ color: \"#1D2951\", fontSize: \"1.1em\" }}>\n                    Get your messages translated on your selected Language and\n                    Chat Live.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </CardDeck>\n          </div>\n        </div>\n        <footer>\n          <p\n            style={{\n              color: \"white\",\n              textAlign: \"center\",\n              padding: \"20px 20px\",\n              fontSize: \"20px\"\n            }}\n          >\n            Developed by: Davide Bernocchi, Floriano Albertini and Madhavi\n            Yalamanchili\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\n// axios\n//   .get\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    bio: \"\",\n    defaultLanguage: \"en - Anglais\",\n    listeLanguages: {},\n    profilePic: \"\",\n    error: \"\",\n    upload: false\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        \"https://api.cognitive.microsofttranslator.com/languages?api-version=3.0\"\n      )\n      .then(listeCountry => {\n        this.setState({\n          listeLanguages: listeCountry.data.dictionary\n        });\n        //  console.log(this.state.listeLanguages);\n\n        //   const arr = Object.entries(this.state.listeLanguages);\n        //   arr.map(item => {\n        //    console.log(item[0]);\n        //      console.log(item[1].name);\n        //   });\n      })\n      .catch(err => console.log(err));\n  }\n\n  // console.log(getKeyByValue(this.state.listeLanguages,\"fr\"));\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value\n      },\n      () => console.log(this.state.defaultLanguage)\n    );\n  };\n\n  // getKeyByValue(object, value) {\n  //   return Object.keys(object).find(key => object[key] === value);\n  // }\n\n  imageUpload = event => {\n    console.log(\"the file to be added is\", event.target.files[0]);\n\n    const files = event.target.files[0];\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"profilePic\", files);\n    this.setState({ upload: true }, () => {\n      axios.post(\"/api/cloudinary\", uploadData).then(response => {\n        //   const urlPath = response.data.secure_url;\n        this.setState({ profilePic: response.data.secure_url }, () => {\n          console.log(this.state);\n          this.setState({ upload: false });\n        });\n      });\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/auth/signup\", {\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        defaultLanguage: this.state.defaultLanguage,\n        profilePic: this.state.profilePic,\n        bio: this.state.bio\n      })\n      .then(response => {\n        console.log(\"LOOOOOOOOOOOOOOOOK\", this.state.defaultLanguage);\n        console.log(response.data);\n        this.props.setUser(response.data);\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        if (err.response.data.message) {\n          this.setState({\n            error: err.response.data.message\n          });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container border border-secondary p-4 mt-4 mr-auto ml-auto col-md-4  \">\n        <h2 className=\"text-center\" style={{ fontWeight: \"bold\" }}>\n          SignUp\n        </h2>\n        <Form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n          <Form.Group>\n            <Form.Label htmlFor=\"email\" style={{ fontWeight: \"500\" }}>\n              Email id:{\" \"}\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label htmlFor=\"username\" style={{ fontWeight: \"500\" }}>\n              Username:{\" \"}\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"password\" style={{ fontWeight: \"500\" }}>\n              Password:{\" \"}\n            </Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              required=\"true\"\n              // pattern=\"(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,15}\"\n            />\n\n            <b\n              style={{\n                color: \"#1D2951\",\n                textAlign: \"center\",\n                fontSize: \"0.5em \"\n              }}\n            >\n              Your password should contain at least one uppercase letter, one\n              downcase letter, one number and be at least 8 to 15 characters\n              long and special characters.\n            </b>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"text\" style={{ fontWeight: \"500\" }}>\n              Add a Bio:{\" \"}\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"bio\"\n              id=\"bio\"\n              value={this.state.bio}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label htmlFor=\"text\" style={{ fontWeight: \"500\" }}>\n              Upload an Image:{\" \"}\n            </Form.Label>\n            <Form.Control\n              id=\"image\"\n              type=\"file\"\n              name=\"imagePath\"\n              placeholder=\"User image\"\n              onChange={this.imageUpload}\n            />\n          </Form.Group>\n          {this.state.upload && (\n            <div>\n              Please wait for a second while we make your image look amazing\n            </div>\n          )}\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label style={{ fontWeight: \"500\" }}>\n              Default Language\n            </Form.Label>\n\n            <Form.Control\n              as=\"select\"\n              value={this.state.defaultLanguage}\n              onChange={this.handleChange}\n              name=\"defaultLanguage\"\n            >\n              {/* {Object.keys(this.state.listeLanguages).map((country, item) => {\n                return <option key={item}> {country} </option>;\n              })} */}\n\n              {Object.entries(this.state.listeLanguages).map(country => {\n                return (\n                  <option key={country[0]}>\n                    {\" \"}\n                    {country[0]} - {country[1].name}{\" \"}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n\n          {this.state.error && (\n            <Alert variant=\"danger\">{this.state.error}</Alert>\n          )}\n          {/* <Form.Group>\n            <Form.Label>Default Language</Form.Label>\n            <Form.Control as=\"select\">\n              <option>Choose...</option>\n              <option>...</option>\n            </Form.Control>\n          </Form.Group> */}\n          {!this.state.upload && (\n            <Button\n              style={{\n                backgroundColor: \"crimson\",\n                color: \"white\",\n                margin: \"20px auto\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"50%\"\n              }}\n              type=\"submit\"\n            >\n              SignUp\n            </Button>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { Alert, Form, Button, Card } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    axios\n      .post(\"/auth/login\", {\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then(response => {\n        console.log(response.data);\n        this.props.setUser(response.data);\n        this.props.history.push(\"/\");\n        console.log(response.data);\n      })\n      .catch(err => {\n        if (err.response.data.message) {\n          this.setState({\n            error: err.response.data.message\n          });\n        }\n      });\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n      <div className=\"container border border-secondary p-4 mt-4 mr-auto ml-auto col-md-3 \">\n        <h2 className=\"text-center\" style={{ fontWeight: \"bold\" }}>\n          Login\n        </h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"username\" style={{ fontWeight: \"500\" }}>\n              Username:{\" \"}\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"password\" style={{ fontWeight: \"500\" }}>\n              Password:{\" \"}\n            </Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          {this.state.error && (\n            <Alert variant=\"danger\">{this.state.error}</Alert>\n          )}\n          <Button\n            style={{\n              backgroundColor: \"crimson\",\n              color: \"white\",\n              margin: \"20px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              width: \"50%\"\n            }}\n            type=\"submit\"\n          >\n            Log in\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Button, Col } from \"react-bootstrap\";\n\nclass Users extends Component {\n  getCountyFlag = countryCode =>\n    `https://www.countryflags.io/${countryCode}/flat/64.png`;\n\n  render() {\n    return (\n      <>\n        {this.props.rooms.map(room => {\n          if (\n            this.props.onlineUsers\n              .map(x => {\n                return x && x._id;\n              })\n              .includes(room.users[1]._id)\n          ) {\n            return (\n              <a onClick={() => this.props.joinRoom(room)}>\n                <div\n                  key={room._id}\n                  className=\"chat_list list-group-item list-group-item-action\"\n                >\n                  <div className=\"chat_people\">\n                    <div className=\"chat_ib\">\n                      <div className=\"chat_img\">\n                        <img src={room.users[1].profilePic} alt=\"user\" />\n                      </div>\n\n                      <h5>\n                        {this.props.user._id === room.users[0]._id\n                          ? room.users[1].username\n                          : room.users[0].username}\n                      </h5>\n\n                      <img className=\"dot\" src=\"green-dot.png\" />\n                    </div>\n                  </div>\n                </div>\n              </a>\n            );\n          } else {\n            return (\n              <a onClick={() => this.props.joinRoom(room)}>\n                <div\n                  key={room._id}\n                  className=\"chat_list list-group-item list-group-item-action\"\n                >\n                  <div className=\"chat_people\">\n                    <div className=\"chat_ib\">\n                      <div className=\"chat_img\">\n                        <img src={room.users[0].profilePic} alt=\"user\" />\n                      </div>\n                      <h5>\n                        {this.props.user._id === room.users[0]._id\n                          ? room.users[1].username\n                          : room.users[0].username}\n\n                        <img className=\"dot\" src=\"red-dot.png\" />\n                      </h5>\n                    </div>\n                  </div>\n                </div>\n              </a>\n            );\n          }\n\n          // <div\n          //   key={room._id}\n          //   className=\"conversation list-group-item list-group-item-action\"\n          // >\n          //   <img src={room.users[1].profilePic} />\n          //   <span> {room.users[1].username}</span>\n          //   <Button onClick={() => this.props.joinRoom(room)}>\n          //     {/* {room.users.map(user => `${user.username} `)} */}\n          //   </Button>\n          // </div>\n        })}\n      </>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from \"react\";\n\nconst Message = props => {\n  const msg = props.msg;\n  const user = props.user;\n  console.log(\"HEY LLOOOOOOOOOK AT USER\", user.username);\n  console.log(\"HEY LLOOOOOOOOOK AT MSG\", msg.username);\n  console.log(props);\n\n  return (\n    <>\n      {user.username == msg.username ? (\n        <div class=\"outgoing_msg\">\n          <div key={msg._id} id=\"message\" className=\"sent_msg\">\n            <p>{user.username === msg.username ? msg.text : msg.translation}</p>\n            <span class=\"time_date\"> {msg.created_at} </span>\n          </div>\n        </div>\n      ) : (\n        <div class=\"incoming_msg\">\n          <div class=\"incoming_msg_img\">\n            {\" \"}\n            <img\n              src={user.profilePic}\n              alt=\"sunil\"\n            />{\" \"}\n          </div>\n          <div class=\"received_msg\">\n            <div key={msg._id} id=\"message\" class=\"received_withd_msg\">\n              <p>\n                {user.username === msg.username ? msg.text : msg.translation}\n              </p>\n              <span class=\"time_date\"> {msg.created_at} </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Message;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport Message from \"./Message\";\n\nconst endpoint = \"http://localhost:5000\";\n\nlet socket = io(endpoint);\n\nclass Chat extends Component {\n  state = {\n    user: this.props.user,\n    users: [],\n    onlineUsers: [],\n    messages: [],\n    message: \"\",\n    roomId: \"\",\n    rooms: [],\n    search: \"\",\n    socketId: socket.id,\n    listeLanguages: {},\n    defaultLanguage: this.props.user.defaultLanguage\n  };\n\n  componentDidMount = () => {\n    axios\n      .get(\n        \"https://api.cognitive.microsofttranslator.com/languages?api-version=3.0\"\n      )\n      .then(listeCountry => {\n        this.setState({\n          listeLanguages: listeCountry.data.dictionary\n        });\n        //  console.log(this.state.listeLanguages);\n\n        //   const arr = Object.entries(this.state.listeLanguages);\n        //   arr.map(item => {\n        //    console.log(item[0]);\n        //      console.log(item[1].name);\n        //   });\n      })\n      .catch(err => console.log(err));\n\n    axios\n      .get(\"http://geoplugin.net/json.gp\")\n      .then(resp => {\n        const { geoplugin_countryCode, geoplugin_city } = resp.data;\n        this.getRooms();\n        socket.emit(\"new_user\", this.state.user);\n        socket.on(\"users\", users => {\n          this.setState({\n            onlineUsers: users,\n            user: {\n              ...this.props.user,\n              isOnline: true,\n              connection: {\n                countryCode: geoplugin_countryCode,\n                city: geoplugin_city\n              }\n            }\n          });\n        });\n\n        socket.on(\"message\", message => {\n          //this.getMessages(this.state.roomId);\n          this.setState({\n            messages: [...this.state.messages, message]\n          });\n        });\n\n        socket.on(\"welcome\", message => {\n          console.log(message);\n          this.getRooms();\n        });\n        socket.on(\"room\", room => {\n          this.setState(\n            {\n              roomId: room[0]._id\n            },\n            () => this.joinRoom(room[0])\n          );\n          this.getRooms();\n        });\n      })\n      .catch(err => console.log(err));\n\n    socket.emit(\"disconnect\");\n\n    socket.off();\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value\n      },\n      () => console.log(this.state.defaultLanguage)\n    );\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // console.log(this.state.defaultLanguage);\n    // console.log(this.state.user._id);\n    // console.log(this.state.user.);\n    axios\n      .post(\"/auth/updateLang\", {\n        id: this.state.user._id,\n        defaultLanguage: this.state.defaultLanguage\n      })\n      .then(response => {\n        console.log(\"LOOOOOOOOOOOOOOOOK\", this.state.defaultLanguage);\n        console.log(response.data);\n      })\n      .catch(err => {\n        if (err.response.data.message) {\n          this.setState({\n            error: err.response.data.message\n          });\n        }\n      });\n  };\n\n  searchUsers = event => {\n    event.preventDefault();\n    axios\n      .get(`/users/${this.state.search}`)\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          users: [...this.state.users, ...res.data],\n          search: \"\"\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  joinRoom = room => {\n    socket.emit(\"joinRoom\", {\n      user: this.state.user,\n      room: room._id\n    });\n    this.setState({\n      roomId: room._id\n    });\n    this.getMessages(room);\n  };\n\n  joinPrivate = user => {\n    socket.emit(\"joinPrivate\", { user1: this.state.user, user2: user });\n    this.setState({\n      users: []\n    });\n  };\n\n  sendMessage = event => {\n    event.preventDefault();\n    socket.emit(\"message\", {\n      message: this.state.message,\n      userId: this.state.user._id,\n      username: this.state.user.username,\n      socketId: this.state.socketId,\n      roomId: this.state.roomId,\n      defaultLanguage: this.state.user.defaultLanguage\n    });\n    this.setState({\n      message: \"\"\n    });\n  };\n\n  getMessages = room => {\n    axios\n      .get(`/messages/${room._id}`)\n      .then(res => {\n        this.setState({\n          messages: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  getRooms = () => {\n    axios.get(\"/rooms\").then(res => {\n      this.setState({\n        rooms: res.data\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-chat\">\n        <div className=\"messaging\">\n          <div className=\"inbox_msg\">\n            <div className=\"inbox_people\">\n              <div className=\"headind_srch\">\n                <div className=\"recent_heading\"></div>\n                <div className=\"srch_bar\">\n                  <div className=\"stylish-input-group\">\n                    <form onSubmit={this.searchUsers}>\n                      <input\n                        className=\"search-bar\"\n                        placeholder=\"Search\"\n                        type=\"text\"\n                        name=\"search\"\n                        id=\"search\"\n                        value={this.state.search}\n                        onChange={this.handleChange}\n                      />\n                    </form>\n\n                    {this.state.users.map(user => {\n                      if (\n                        this.state.onlineUsers\n                          .map(x => {\n                            return x && x._id;\n                          })\n                          .includes(user._id)\n                      ) {\n                        return (\n                          <a\n                            classNameName=\"searchedUser\"\n                            onClick={() => this.joinPrivate(user)}\n                          >\n                            <div\n                              key={user._id}\n                              className=\"chat_list list-group-item list-group-item-action\"\n                            >\n                              <div className=\"chat_people\">\n                                <div className=\"chat_img\">\n                                  <img src={user.profilePic} alt=\"user\" />\n                                </div>\n                                <div className=\"chat_ib\">\n                                  <h5>\n                                    {user.username}\n\n                                    <img className=\"dot\" src=\"green-dot.png\" />\n                                  </h5>\n                                </div>\n                              </div>\n                            </div>\n                          </a>\n                        );\n                      } else {\n                        return (\n                          <a\n                            className=\"searchedUser\"\n                            onClick={() => this.joinPrivate(user)}\n                          >\n                            <div\n                              key={user._id}\n                              className=\"chat_list list-group-item list-group-item-action\"\n                            >\n                              <div className=\"chat_people\">\n                                <div className=\"chat_img\">\n                                  <img src={user.profilePic} alt=\"user\" />\n                                </div>\n                                <div className=\"chat_ib\">\n                                  <h5>\n                                    {user.username}\n\n                                    <img className=\"dot\" src=\"red-dot.png\" />\n                                  </h5>\n                                </div>\n                              </div>\n                            </div>\n                          </a>\n                        );\n                      }\n                    })}\n                  </div>\n                </div>\n              </div>\n              <div className=\"inbox_chat scroll\">\n                <Users\n                  user={this.state.user}\n                  rooms={this.state.rooms}\n                  users={this.state.users}\n                  onlineUsers={this.state.onlineUsers}\n                  joinRoom={this.joinRoom}\n                />\n              </div>\n            </div>\n            \n            \n          \n\n          <Col xs={6} id=\"chat\" className=\"received_msg\">\n            <ScrollToBottom className=\"messages\">\n              {this.state.messages.map(msg => {\n                console.log(\n                  \"LOOOOOOOK AT ME AHhhhhHHHHHHHHHHHHHHHHHHHHHHH  \",\n                  msg\n                );\n                return (\n                  <Message\n                    className=\"received_msg\"\n                    user={this.state.user}\n                    msg={msg}\n                    key={msg._id}\n                  />\n                );\n              })}\n            </ScrollToBottom>\n\n            <form onSubmit={this.handleSubmit}>\n              <i\n                class=\"fa fa-chevron-down expand-button\"\n                aria-hidden=\"true\"\n              ></i>\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label style={{ fontWeight: \"500\" }}>\n                  Select you language\n                </Form.Label>\n\n                <div>\n                  <div class=\"input_msg_write\">\n                    <Form.Control\n                      as=\"select\"\n                      className=\"write_msg\"\n                      value={this.state.defaultLanguage}\n                      onChange={this.handleChange}\n                      name=\"defaultLanguage\"\n                    >\n                      {Object.entries(this.state.listeLanguages).map(\n                        country => {\n                          return (\n                            <option key={country[0]}>\n                              {\" \"}\n                              {country[0]} - {country[1].name}{\" \"}\n                            </option>\n                          );\n                        }\n                      )}\n                    </Form.Control>\n                  </div>\n                </div>\n              </Form.Group>\n\n              <button className=\"btn btn-light ml-4\" type=\"submit\">\n                Change language\n              </button>\n            </form>\n\n            <form onSubmit={this.sendMessage}>\n              <div class=\"type_msg\">\n                <div class=\"input_msg_write\">\n                  <button className=\"btn btn-light ml-4\" type=\"submit\">\n                    <i class=\"language big icon\" aria-hidden=\"true\"></i>\n                  </button>\n                  <input\n                    type=\"text\"\n                    className=\"write_msg\"\n                    name=\"message\"\n                    id=\"message\"\n                    value={this.state.message}\n                    onChange={this.handleChange}\n                  />\n\n                  <button className=\"btn btn-light ml-4\" type=\"submit\">\n                    Send\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Col>\n\n          <div class=\"type_msg\">\n            <div class=\"input_msg_write\">\n              <input\n                type=\"text\"\n                class=\"write_msg\"\n                placeholder=\"Type a message\"\n              />\n              <button class=\"msg_send_btn\" type=\"button\">\n                <i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { Component } from \"react\";\nimport {\n  Alert,\n  Form,\n  FormGroup,\n  FormControl,\n  FormLabel,\n  Button\n} from \"react-bootstrap\";\n\nimport axios from \"axios\";\n\nclass Settings extends Component {\n  state = {\n    password: \"\",\n    confirmPassword: \"\",\n    error: \"\",\n    profilePic: \"\",\n    bio: \"\",\n    completed: false,\n    upload: false\n  };\n\n  validateForm() {\n    return (\n      this.state.password.length > 8 &&\n      this.state.password === this.state.confirmPassword\n    );\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  };\n\n  imageUpload = event => {\n    console.log(\"the file to be added is\", event.target.files[0]);\n\n    const files = event.target.files[0];\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"profilePic\", files);\n    this.setState({ upload: true }, () => {\n      axios.post(\"/api/cloudinary\", uploadData).then(response => {\n        //   const urlPath = response.data.secure_url;\n        this.setState({ profilePic: response.data.secure_url }, () => {\n          console.log(this.state);\n          this.setState({ upload: false });\n        });\n      });\n    });\n  };\n\n  handleChangeClick = async event => {\n    event.preventDefault();\n    console.log(this.validateForm());\n    if (this.validateForm() === true) {\n      axios\n        .post(\"/auth/changeDetails\", {\n          password: this.state.password,\n          bio: this.state.bio,\n          profilePic: this.state.profilePic\n        })\n        .then(response => {\n          console.log(response.data);\n          this.setState({\n            completed: true,\n            error: \"\"\n          });\n\n          setTimeout(() => {\n            this.props.history.push(\"/\");\n          }, 1000);\n          // this.props.history.push(\"/\");\n        })\n        .catch(err => {\n          // if (err.response.data.message) {\n          console.log(err);\n        });\n    } else {\n      this.setState({\n        error: \"Password is too short / did not match\"\n      });\n    }\n  };\n  componentDidMount = () => {\n    console.log(\"hello\");\n    axios.get(\"/api/test\").then(user => {\n      console.log(user.data);\n      this.setState(\n        {\n          profilePic: user.data.profilePic\n        },\n        () => console.log(this.state.profilePic)\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container border border-secondary p-4 mt-4 mr-auto ml-auto col-md-3 \">\n        <h2 style={{ color: \"black\", textAlign: \"center\" }}>\n          Edit your Details!\n        </h2>\n        <form onSubmit={this.handleChangeClick}>\n          <FormGroup bsSize=\"large\" controlId=\"password\">\n            <FormLabel>New Password</FormLabel>\n            <FormControl\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup bsSize=\"large\" controlId=\"confirmPassword\">\n            <FormLabel>Confirm Password</FormLabel>\n            <FormControl\n              type=\"password\"\n              onChange={this.handleChange}\n              value={this.state.confirmPassword}\n              pattern=\"(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,15}\"\n            />\n            <b\n              style={{\n                color: \"#1D2951\",\n                textAlign: \"center\",\n                fontSize: \"0.5em \"\n              }}\n            >\n              Your password should contain at least one uppercase letter, one\n              downcase letter, one number and be at least 8 to 15 characters\n              long and special characters.\n            </b>\n          </FormGroup>\n          <Form.Group>\n            <Form.Label htmlFor=\"text\">Add a Bio: </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"bio\"\n              id=\"bio\"\n              value={this.state.bio}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"text\" style={{ fontWeight: \"500\" }}>\n              Upload an Image:{\" \"}\n            </Form.Label>\n            <Form.Control\n              id=\"image\"\n              type=\"file\"\n              name=\"imagePath\"\n              placeholder=\"User image\"\n              onChange={this.imageUpload}\n            />\n          </Form.Group>\n          {this.state.upload && (\n            <div>\n              Please wait for a second while we make your image look amazing\n            </div>\n          )}\n          <img\n            src={this.state.profilePic}\n            style={{\n              border: \"2px solid black\",\n              margin: \"30px  20px\",\n              display: \"flex\",\n              float: \"right\",\n              width: \"10%\",\n              position: \"fixed\",\n              bottom: \"65%\",\n              left: \"85%\"\n            }}\n            alt=\"profile\"\n          />\n          <Button\n            block\n            type=\"submit\"\n            bsSize=\"large\"\n            text=\"Change Password\"\n            loadingText=\"Changing…\"\n            isLoading={this.state.isChanging}\n            style={{\n              backgroundColor: \"crimson\",\n              color: \"white\",\n              margin: \"20px auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              width: \"50%\"\n            }}\n          >\n            Submit\n          </Button>\n        </form>\n        {this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>}\n        {this.state.completed && (\n          <Alert variant=\"success\">Password updaded</Alert>\n        )}\n      </div>\n    );\n  }\n}\nexport default Settings;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardDeck, Button } from \"react-bootstrap\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <Card className=\"text-center container border border-dark p-4 mt-4\">\n          <Card.Header\n            style={{ fontWeight: \"bolder\", fontSize: \"20px\", color: \"#1D2951\" }}\n          >\n            About GloChat\n          </Card.Header>\n          <Card.Body>\n            <Card.Text style={{ fontSize: \"15px\", color: \"  #5b342e\" }}>\n              GloChat is a web App which help people around the world to connect\n              with each other and can also exchange messages with different\n              people in different languages globally.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card className=\"text-center container border border-dark p-4 mt-4\">\n          <Card.Header\n            style={{ fontWeight: \"bolder\", fontSize: \"20px\", color: \"#1D2951\" }}\n          >\n            How to use this App?\n          </Card.Header>\n          <Card.Body>\n            <Card.Text style={{ fontSize: \"15px\", color: \"#5b342e\" }}>\n              Simply Signup and Login with your credentials, choose the language\n              in which you want to chat and connect with people around the\n              globe.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card className=\"text-center container border border-dark p-4 mt-4\">\n          <Card.Header\n            style={{ fontWeight: \"bolder\", fontSize: \"20px\", color: \"#1D2951\" }}\n          >\n            About us!\n          </Card.Header>\n          <Card.Body>\n            <Card.Text style={{ fontSize: \"15px\", color: \"#5b342e\" }}>\n              This project was made as part of the Ironhack Web Development\n              bootcamp in Berlin by Davide Bernocchi, Floriano Albertini and\n              Madhavi Yalamanchili. The aim of the project was to build our\n              full-stack MERN web application. This was our final project during\n              the bootcamp and the development time was one week. You can check\n              out the Github repo here.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card className=\"text-center container border border-dark p-4 mt-4\">\n          <Card.Header\n            style={{ fontWeight: \"bolder\", fontSize: \"20px\", color: \"#1D2951\" }}\n          >\n            Technologies Used\n          </Card.Header>\n          <Card.Body>\n            <Card.Text style={{ fontSize: \"15px\", color: \"#5b342e\" }}>\n              The tech stack we used was the MERN stack: HTML/CSS,\n              JavaScript,Bootstrap, Node.js,MongoDB,Cloudinary(Pictures)\n              Express.js,Socket.io,Microsoft Azure API(Translation) and\n              React.js.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card.Footer className=\"text-center\">\n          Find the Project Repo on{\" \"}\n          <a\n            href=\"https://github.com/davideberno/GloChat\"\n            style={{ color: \"#1D2951\", fontWeight: \"bold\" }}\n          >\n            Github\n          </a>\n        </Card.Footer>\n      </div>\n    );\n  }\n}\nexport default About;\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport NavBar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport Chat from \"./components/Chat\";\nimport Settings from \"./components/Settings\";\nimport About from \"./components/About\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = user => {\n    this.setState({\n      user: user\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar user={this.state.user} clearUser={this.setUser} />\n\n        {this.state.user ? (\n          <Route\n            exact\n            path=\"/\"\n            render={props => <Chat user={this.state.user} {...props} />}\n          />\n        ) : (\n          <Route exact path=\"/\" component={Home} />\n        )}\n        <Route\n          exact\n          path=\"/login\"\n          render={props => (\n            <Login user={this.state.user} setUser={this.setUser} {...props} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          render={props => (\n            <Signup user={this.state.user} setUser={this.setUser} {...props} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/auth/google\"\n          render={props => (\n            <Signup user={this.state.user} setUser={this.setUser} {...props} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/settings\"\n          setUser={this.setUser}\n          component={Settings}\n        />\n        <Route exact path=\"/about\" setUser={this.setUser} component={About} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./style.css\";\n\naxios.get(\"/auth/loggedin\").then(response => {\n  const user = response.data;\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}